// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package gen

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Response struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateRequest struct {
	ID                   string   `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	Event                *Event   `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *UpdateRequest) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type DeleteRequest struct {
	ID                   string   `protobuf:"bytes,4,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func init() {
	proto.RegisterType((*Response)(nil), "proto.Response")
	proto.RegisterType((*UpdateRequest)(nil), "proto.UpdateRequest")
	proto.RegisterType((*DeleteRequest)(nil), "proto.DeleteRequest")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x4f, 0x4b, 0xc3, 0x40,
	0x14, 0xc4, 0x9b, 0xd4, 0xfa, 0xe7, 0xa5, 0xa9, 0xf0, 0xf0, 0x10, 0x72, 0x69, 0x59, 0x3c, 0xf4,
	0xb4, 0x85, 0x0a, 0x5e, 0xd4, 0x83, 0x34, 0x1e, 0x02, 0x0a, 0x12, 0x14, 0xcf, 0x5b, 0x7d, 0xc6,
	0x60, 0x93, 0x8d, 0xd9, 0x6d, 0xc1, 0x4f, 0xeb, 0x57, 0x11, 0x77, 0xb3, 0x62, 0x44, 0x84, 0x9e,
	0xf2, 0x26, 0x3b, 0xbf, 0x61, 0x18, 0x08, 0x15, 0x35, 0x9b, 0xe2, 0x91, 0x78, 0xdd, 0x48, 0x2d,
	0x71, 0x60, 0x3e, 0xf1, 0x38, 0x97, 0x32, 0x5f, 0xd1, 0xcc, 0xa8, 0xe5, 0xfa, 0x79, 0xa6, 0x8b,
	0x92, 0x94, 0x16, 0x65, 0x6d, 0x7d, 0x71, 0x40, 0x1b, 0xaa, 0xb4, 0x15, 0xec, 0x18, 0xf6, 0x33,
	0x52, 0xb5, 0xac, 0x14, 0x61, 0x04, 0x7b, 0x25, 0x29, 0x25, 0x72, 0x8a, 0xbc, 0x89, 0x37, 0x3d,
	0xc8, 0x9c, 0x64, 0x0b, 0x08, 0xef, 0xeb, 0x27, 0xa1, 0x29, 0xa3, 0xb7, 0x35, 0x29, 0x8d, 0x23,
	0xf0, 0xd3, 0x24, 0xf2, 0x8d, 0xcb, 0x4f, 0x13, 0x64, 0x30, 0x30, 0xa9, 0x51, 0x7f, 0xe2, 0x4d,
	0x83, 0xf9, 0xd0, 0xa6, 0xf3, 0xab, 0xaf, 0x7f, 0x99, 0x7d, 0x62, 0x63, 0x08, 0x13, 0x5a, 0xd1,
	0xef, 0x90, 0x1d, 0x17, 0x32, 0xff, 0xf0, 0xa1, 0x7f, 0x79, 0x9b, 0x22, 0x87, 0xc0, 0x80, 0x8b,
	0x86, 0x84, 0x26, 0xec, 0x84, 0xc5, 0x87, 0xad, 0x72, 0xad, 0x59, 0x0f, 0x4f, 0x5b, 0xbf, 0xad,
	0x88, 0x47, 0xad, 0xa3, 0xd3, 0xf8, 0x3f, 0xce, 0xb6, 0xfa, 0xe6, 0x3a, 0x25, 0xff, 0xe2, 0xce,
	0x60, 0x68, 0x39, 0xf1, 0x7e, 0x5d, 0x28, 0x8d, 0x31, 0xb7, 0x93, 0x73, 0x37, 0x39, 0xbf, 0x73,
	0x93, 0xc7, 0xe1, 0xcf, 0xf2, 0x8a, 0xf5, 0xf0, 0x1c, 0x42, 0x73, 0x3f, 0x10, 0xbd, 0x6e, 0x4f,
	0x5f, 0xc0, 0xc8, 0xdc, 0x37, 0xb2, 0xd2, 0x2f, 0x5b, 0xe3, 0xcb, 0x5d, 0xa3, 0x4f, 0x3e, 0x03,
	0x00, 0x00, 0xff, 0xff, 0xd6, 0xe4, 0x69, 0x06, 0x3a, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// APIClient is the client API for API service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APIClient interface {
	EventCreate(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Response, error)
	EventUpdate(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*Response, error)
	EventDelete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*Response, error)
	EventDayList(ctx context.Context, in *timestamp.Timestamp, opts ...grpc.CallOption) (*Events, error)
	EventWeekList(ctx context.Context, in *timestamp.Timestamp, opts ...grpc.CallOption) (*Events, error)
	EventMonthList(ctx context.Context, in *timestamp.Timestamp, opts ...grpc.CallOption) (*Events, error)
}

type aPIClient struct {
	cc *grpc.ClientConn
}

func NewAPIClient(cc *grpc.ClientConn) APIClient {
	return &aPIClient{cc}
}

func (c *aPIClient) EventCreate(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.API/EventCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) EventUpdate(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.API/EventUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) EventDelete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.API/EventDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) EventDayList(ctx context.Context, in *timestamp.Timestamp, opts ...grpc.CallOption) (*Events, error) {
	out := new(Events)
	err := c.cc.Invoke(ctx, "/proto.API/EventDayList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) EventWeekList(ctx context.Context, in *timestamp.Timestamp, opts ...grpc.CallOption) (*Events, error) {
	out := new(Events)
	err := c.cc.Invoke(ctx, "/proto.API/EventWeekList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) EventMonthList(ctx context.Context, in *timestamp.Timestamp, opts ...grpc.CallOption) (*Events, error) {
	out := new(Events)
	err := c.cc.Invoke(ctx, "/proto.API/EventMonthList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// APIServer is the server API for API service.
type APIServer interface {
	EventCreate(context.Context, *Event) (*Response, error)
	EventUpdate(context.Context, *UpdateRequest) (*Response, error)
	EventDelete(context.Context, *DeleteRequest) (*Response, error)
	EventDayList(context.Context, *timestamp.Timestamp) (*Events, error)
	EventWeekList(context.Context, *timestamp.Timestamp) (*Events, error)
	EventMonthList(context.Context, *timestamp.Timestamp) (*Events, error)
}

// UnimplementedAPIServer can be embedded to have forward compatible implementations.
type UnimplementedAPIServer struct {
}

func (*UnimplementedAPIServer) EventCreate(ctx context.Context, req *Event) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventCreate not implemented")
}
func (*UnimplementedAPIServer) EventUpdate(ctx context.Context, req *UpdateRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventUpdate not implemented")
}
func (*UnimplementedAPIServer) EventDelete(ctx context.Context, req *DeleteRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventDelete not implemented")
}
func (*UnimplementedAPIServer) EventDayList(ctx context.Context, req *timestamp.Timestamp) (*Events, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventDayList not implemented")
}
func (*UnimplementedAPIServer) EventWeekList(ctx context.Context, req *timestamp.Timestamp) (*Events, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventWeekList not implemented")
}
func (*UnimplementedAPIServer) EventMonthList(ctx context.Context, req *timestamp.Timestamp) (*Events, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventMonthList not implemented")
}

func RegisterAPIServer(s *grpc.Server, srv APIServer) {
	s.RegisterService(&_API_serviceDesc, srv)
}

func _API_EventCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Event)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).EventCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/EventCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).EventCreate(ctx, req.(*Event))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_EventUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).EventUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/EventUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).EventUpdate(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_EventDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).EventDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/EventDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).EventDelete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_EventDayList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(timestamp.Timestamp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).EventDayList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/EventDayList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).EventDayList(ctx, req.(*timestamp.Timestamp))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_EventWeekList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(timestamp.Timestamp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).EventWeekList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/EventWeekList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).EventWeekList(ctx, req.(*timestamp.Timestamp))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_EventMonthList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(timestamp.Timestamp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).EventMonthList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/EventMonthList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).EventMonthList(ctx, req.(*timestamp.Timestamp))
	}
	return interceptor(ctx, in, info, handler)
}

var _API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.API",
	HandlerType: (*APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EventCreate",
			Handler:    _API_EventCreate_Handler,
		},
		{
			MethodName: "EventUpdate",
			Handler:    _API_EventUpdate_Handler,
		},
		{
			MethodName: "EventDelete",
			Handler:    _API_EventDelete_Handler,
		},
		{
			MethodName: "EventDayList",
			Handler:    _API_EventDayList_Handler,
		},
		{
			MethodName: "EventWeekList",
			Handler:    _API_EventWeekList_Handler,
		},
		{
			MethodName: "EventMonthList",
			Handler:    _API_EventMonthList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
